Q Which of the following describes the Builder pattern correctly?
- Builder pattern builds a complex object using simple objects and using a step by step approach. This builder is independent of other objects.

Q Which of the following pattern is used when creation of object directly is costly?
- Prototype pattern is used when creation of object directly is costly.
It is used to create a duplicate object.

Q Which of the following describes the Chain of Responsibility pattern correctly?
- chain of responsibility pattern creates a chain of receiver objects for a request.

Q Which of the following pattern is used to reduce communication complexity between multiple objects or classes?
- Mediator pattern is used to reduce communication complexity between multiple objects or classes.

Q Which of the following describes the Strategy pattern correctly?
- In Strategy pattern, a class behavior or its algorithm can be changed at run time.

Q Which of the following pattern is used to separate application's concerns?
- MVC pattern is used to separate application's concerns.

Q Which of the following pattern creates object without exposing the creation logic to the client and refer to newly created object using a common interface?
- Factory Pattern (Creational design pattern) creates object without exposing the creation logic to the client and refer to newly created object using a common interface.

Q Which type of design patterns are specifically concerned with the presentation tier?
- J2EE Design Patterns are specifically concerned with the presentation tier.

Q Which of the following is the correct list of entities of Intercepting pattern?
- Filter, Filter Chain, Target, Filter Manager, Client are the entities of Intercepting pattern.

Q You want to minimize development cost by reusing methods? Which design pattern would you choose?
- The delegation pattern is a design pattern in OOP where an object, instead of performing one of its stated tasks, 
delegates that task to an associated helper object.

Q You want to avoid multiple inheritance. Which design pattern would you choose?
- Player Role Pattern

Q Facade pattern promotes weak coupling between subsystem and its clients?
- It is one of the patterns benefit.The facade pattern shields clients from subsystem classes and reduces the number of objects that clients deal with.
A facade can be a single entry point to each subsystem level. It decouples the subsystem.

Q Which design pattern defines one-to-many dependency among objects?
- Observer pattern defines one-to-many dependency among objects so that when one object changes its state, all its dependents are notified.

Q Which pattern provides centralized request handling mechanism so that all requests are handled by single handler?
- Front Controller pattern

Q Attach additional responsiblities to an object dynamically. It provides a flexible alternative to subclass for extending functionality.
- Decorator

Q Encapsulate a request as an object, parameterize clients with different requests, queue/log requests and support undoable operation
- Command

Q What represents structure and behaviour of the pattern?
- Form


