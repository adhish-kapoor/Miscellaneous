Q The benefits of Microservices include ?
- Improved Fault Isolation
- Faster to build and deploy
- Scale development: Develop, Deploy and Scale
- Easy scaling

Q The complexity of developing, testing and deploying the distributed system, 
and handling partial failures account to the disadvantages of ?
Microservices require a lot of monitoring to operate effectively
Microservices are very difficult to manage at scale
- Microservices

Q Agile development & deployment is difficult in case of?
- Monolithic

Q The decomposition of Microservices is based on two categories, namely?
- Business Capability and Subdomain

Q Simple to develop, test, deploy and scale represents?
- Monolithic

Q The 3Cs of Microservices include?
- Componentize
- Collaborate
- Connect

Q Microservice is considered as a subset of SOA.
- True

Q What's the difference between a microservices-oriented architecture (MOA) and a service-oriented architecture (SOA)?
- An SOA uses intermediation technology to facilitate communication between services
- An MOA shares as little data as possible while an SOA shares as much data as possible
- A developer can run a monolithic application with SOA principles

Q Microservice Architecture adapts which of the following concept(s)?
- Web Service/HTTP
- SOA
- OOPS

Q Helps to control and limit the number of consecutive request failures that cross a threshold?
- Circuit breaker

Q Which ensures to insulate the applications by acting as a barrier?
- API Gateway

Q AWS Elastic Load Balancer (ELB) is an example of?
- Server-side discovery

Q Which acts as a database of services?
- Service Registry

Q API Gateway ensures?
- Protocol translation
- Composition
- Request routing

Q Netflix OSS is an example of?
- Client-side discovery

Q Scenarios where the client takes the onus and is responsible for determining the network locations of the available service instances is?
- Client-side discovery

Q Amazon EC2 Container Service is an example of?
- Docker

Q The transactions that span across multiple services are handled by?
- Event driven Architecture

Q Microservices supports different kinds of databases and this is called?
- Polyglot persistence

Q Microservices-based architecture prefers?
- No dependency on any particular DB

Q The two components of CQRS include?
- Query and command side

Q Efficient Utilization and Fast Deployment represents which pattern?
- Multiple Services per Host pattern

Q Limited Efficient Utilization and slow deployment represent?
- Service Instance per Host

Q Packer.io and Boxful represent which type of pattern?
- Service Instance per Host

Q Kubernotes and Marathon are examples of
- Service Instance per Container

Q IDL stands for?
- Interface Definition Language

Q Which of these is a drawback of Multiple Services per Host pattern?
- Risk of conflicting resource requirements/Difficult to limit resource utilization

Q Which among these helps in developing a microservice quickly?
- Chassis

Q Each external request is tagged with a unique identifier which is passed to all services involved in handling the request 
and included in application logging messages.
- Distributed tracing

Q How is distributed tracing used in microservices?
- As a mechanism to observe the behavior of distinct system calls between and within microservices

Q In Microservices, the API Gateway takes care of the security aspect by rendering?
- Access tokens

Q The following are all caching types
- No Cache
- Local & Remote Cache
- Shared Cache
- Distributed Cache

Q Microservice Chassis takes care of the following
- Metrics
- Health checks
- Logging
- Externalized configuration

Q Which pattern collects and reports all exceptions to a centralized exception tracking service?
- Exception tracing

Q Functional Decomposition is an example of
- Microservices

Q How does a backing service apply to microservices?
- It acts as a dedicated service that provides essential functionality required by a microservice

Q What does the term "bounded context" mean in relation to microservices?
- The logical domain represented by the data consumed and emitted by a microservice according to the data's purpose, structure and meaning
