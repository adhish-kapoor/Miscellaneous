Q What’s one reason to regularly merge code into a master branch instead of using feature branches?
- Reduce integration and debugging waste later on

Q Why should developers, operators, and support staff share a single ticketing system?
- You can avoid losing data as customer information moves between systems

Q What’s the point of sending regular, structured team updates to executives?
- Share core business metrics and delivery momentum

Q Why is it useful to have a regular operations review with management?
- Stay focused on customers while improving quality of entire organization

Q How can you use data to make decisions about resizing application teams?
- Look at team velocity and understand expected impact of new team members

Q Why are relationships important within a DevOps team?
- You can build trust that comes in handy during a crisis.

Q DevOps is characterized by:
- Cultural norms and collaboration practices that enable the fast flow of high-quality work

Q In which way is an enterprise DevOps different from DevOps at a small company?
- More functional silos in place

Q What is NOT a good way to patch infrastructure in a DevOps environment?
- Log into servers and run update scripts

Q What is a common pitfall for organizations that are automating deployments and infrastructure?
- The first pitfall is complexity. Automating a complex, fragile manual process produces a complex, fragile automated process. 
You first need to re-architect for deployability. 
This means making the deployment script as simple as possible and pushing the complexity into the application code and infrastructure platform.

Q A well-designed application team has no dependencies on other teams.
- False

Q Why does product documentation need a new approach in DevOps?
- More frequent product changes result in out-of-date product docs

Q How does a blue/green deployment work?
- While “blue” is serving production, “green” is updated and starts accepting production traffic

Q What does NOT belong in the application package?
- Instructions for post-deployment manual changes

Q MaaS ?
- Metal as a Service (MAAS) provides complete automation of physical servers for data center operation efficiency on-premises.
It is open-source software and supported by Canonical.

Q Devops vs Agile?
- DevOps is a culture, fostering collaboration amongst all participants involved in the development and maintenance of software. 
- Agile can be described as a development methodology designed to maintain productivity and drive releases with the common reality of changing needs.

Q Ansible
- Ansible has a master but no agents running on the client machines—all functions are performed over SSH protocol.
- Ansible uses YAML syntax. Complex tasks are handled in configuration files called playbooks, and commands can be written in almost any programming language.
- Ansible, the server pushes configurations to the nodes, for instantaneous deployment.

Q Puppet
- Puppet uses its own declarative language (also called domain-specific language, or DSL).
- Puppet, you have to write the configurations in Puppet’s language
- In Puppet, the client pulls configurations from the server.

Q Orchestration
- Orchestration and scheduling tools strive to eliminate silos, streamline processes and automate repetitive tasks 
so that IT departments can move quickly and efficiently. 
While similar to automation, orchestration goes beyond the scope of automation by focusing on workflows or processes rather than simple tasks.

Q Facter
- Facter is Puppet's cross-platform system profiling library. 
It discovers and reports per-node facts, which are available in your Puppet manifests as variables.

Q Hiera
- Hiera is a built-in key-value configuration data lookup system, used for separating data from Puppet code.

Q “DevOps is more than just a tool or a process change, it inherently requires an organisational culture shift”
- Yes, there needs to be cultural shift within the organisation across all stakeholders to ensure a successful adoption of a DevOps approach.

Q The development teams that support the Agile approach to DevOps must include staff from the operations teams to ensure:
-Operational considerations are taken into account
-The resultant designs of the systems will fit nicely into the business as usual environment

Q Which statement best describes the relationship between DevOps and Continuous Delivery?
- DevOps and Continuous Delivery share a background in Agile methods and LEAN thinking.
